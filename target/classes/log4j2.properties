status = error
 
property.filename = target/rolling/rollingtest.log
 
filter.threshold.type = ThresholdFilter
filter.threshold.level = debug
 
 
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %m%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = debug


appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = logs/app.log
appender.rolling.filePattern = logs/%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.rolling.policies.type = Policies
#appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
#appender.rolling.policies.time.interval = 2
#appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

#appender.stdout.type = Console
# ... other appender properties
#appender.file.type = File
# ... other appender properties
#logger.app = INFO, stdout, file
#logger.app.name = com.example.app
 
# is equivalent to:
# appender.stdout.type = Console
# appender.stdout.name = stdout
# ...
#appender.file.type = File
#appender.file.name = file
# ...
logger.app.name = myproject
logger.app.level = debug
logger.app.additivity=false
logger.app.appenderRef.console.ref = STDOUT
logger.app.appenderRef.rolling.ref = RollingFile

 
#logger.rolling = debug, RollingFile
#logger.rolling.name = com.example.my.app
#logger.rolling.additivity = false
# 
#rootLogger = info, STDOUT
 
# or using a grouping element:
 rootLogger.level = info
 rootLogger.appenderRef.stdout.ref = STDOUT